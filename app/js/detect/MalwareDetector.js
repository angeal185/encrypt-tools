// MalwareDetector.js

function MalwareDetector(adContainerId, scanInterval) {
  this.adContainerId = adContainerId;
  this.scanInterval = scanInterval;
  this.maliciousPatterns = [/malicious_pattern_1/, /malicious_pattern_2/];
  this.extensionCheckInterval = 300000; // Check for extensions every 5 minutes
  this.timer = null;
  this.extensionDetectionTimer = null;
}

MalwareDetector.prototype.scanAdContainer = function () {
  const adContainer = document.getElementById(this.adContainerId);
  if (!adContainer) {
    console.warn(`Ad container with ID "${this.adContainerId}" not found.`);
    return;
  }

  const adScripts = adContainer.getElementsByTagName('script');
  for (let i = 0; i < adScripts.length; i++) {
    const scriptContent = adScripts[i].innerText;
    if (scriptContent) {
      for (let j = 0; j < this.maliciousPatterns.length; j++) {
        if (this.maliciousPatterns[j].test(scriptContent)) {
          console.error('Malicious script detected:', scriptContent);
          // Perform actions on detection, e.g., remove the script
          // adScripts[i].parentNode.removeChild(adScripts[i]);
        }
      }
    }
  }
};

MalwareDetector.prototype.detectBrowserExtensions = function () {
  const self = this;

  // Check for installed extensions based on the browser
  if (typeof browser !== 'undefined' && browser.runtime && browser.runtime.sendMessage) {
    browser.runtime.sendMessage(null, { query: 'getExtensions' }).then((extensions) => {
      if (extensions.length > 0) {
        console.warn('Browser extensions detected:', extensions);
        // Perform actions on detection, e.g., notify user or take preventive measures
      }
    }).catch((error) => {
      console.error('Error detecting extensions:', error);
    });
  } else if (typeof chrome !== 'undefined' && chrome.runtime && chrome.runtime.sendMessage) {
    chrome.runtime.sendMessage(null, { query: 'getExtensions' }, (extensions) => {
      if (chrome.runtime.lastError) {
        console.error('Error detecting extensions:', chrome.runtime.lastError);
        return;
      }
      if (extensions.length > 0) {
        console.warn('Browser extensions detected:', extensions);
        // Perform actions on detection, e.g., notify user or take preventive measures
      }
    });
  } else {
    console.warn('Browser extension detection not supported.');
  }
};

MalwareDetector.prototype.startScans = function () {
  this.scanAdContainer();
  this.timer = setInterval(this.scanAdContainer.bind(this), this.scanInterval);

  // Start extension detection
  this.extensionDetectionTimer = setInterval(this.detectBrowserExtensions.bind(this), this.extensionCheckInterval);
};

MalwareDetector.prototype.stopScans = function () {
  clearInterval(this.timer);
  clearInterval(this.extensionDetectionTimer);
  this.timer = null;
  this.extensionDetectionTimer = null;
};

export { MalwareDetector };
